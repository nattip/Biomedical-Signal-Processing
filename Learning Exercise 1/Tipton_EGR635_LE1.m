%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Title: LE 1
% Filename: Tipton_EGR635_LE1.m
% Author: Natalie Tipton
% Date: 9/10/19
% Instructor: Dr. Rhodes
% Description: This script looks at probability distribution of random
%   data generated by MATLAB through a self-written histogram function
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%% Exercise 1 %%%%%%%%%%%%%%%%%%%

rng('shuffle');     % seed random number generation with current time

% first sample
data_rand = rand(1, 15000);     % generate rand data
maximum = 2;    
minimum = -1;
Nbins = 150;

hist = histogram(minimum, maximum, Nbins, data_rand);       % call histogram function
bins = minimum : (maximum - minimum) / Nbins : maximum;     % generate x-axis data
bins(end) = [];                                             % remove extra value on x-axis

figure(1)                               % new figure
bar(bins,hist)                          % create bar chart of histogram against rand values
title('Normalized PDF of rand data');   % label plot
xlabel('rand data values');
ylabel('Probability of rand value');

% second sample
data_randn = randn(1, 30000);           % generate randn data
maximum = 10;
minimum = -10;
Nbins = 300;

hist2 = histogram(minimum, maximum, Nbins, data_randn);     % call histogram function
bins = minimum : (maximum - minimum) / Nbins : maximum;     % generate x-axis data
bins(end) = [];                                             % remove extra value on x-axis

figure(2)                                   % new figure
bar(bins,hist2);                            % create bar chart of histogram against randn values
title('Normalized PDF of randn data');      % label plot
xlabel('randn data values');            
ylabel('Probability of randn value');

% third sample
data_PNnew = zeros(1, 30000);                   % allocate size for data

for i = 1:30000
    data_PNnew(1,i) = sum(rand(1,12)) - 6;      % create new PN data
end

maximum = 10;
minimum = -10;
Nbins = 300;

hist3 = histogram(minimum, maximum, Nbins, data_PNnew);     % call histogram function
bins = minimum : (maximum - minimum) / Nbins : maximum;     % generate x-axis data
bins(end) = [];                                             % remove extra value on x-axis

figure(3)                                   % new figure
bar(bins,hist3);                            % create bar chart of histogram against new PN values
title('Normalized PDF of new PN data');     % label plot
xlabel('new PN data values');
ylabel('Probability of new PN value');



    
    